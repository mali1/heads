version: 2
jobs:
  build:
    docker:
      - image: debian:10
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update
            apt install -y build-essential zlib1g-dev uuid-dev libdigest-sha-perl libelf-dev bc bzip2 bison flex git gnupg iasl m4 nasm patch python python2 python3 wget gnat cpio ccache pkg-config cmake libusb-1.0-0-dev autoconf texinfo ncurses-dev doxygen graphviz udev libudev1 libudev-dev automake libtool rsync innoextract
      - checkout

      - run:
          name: git reset
          command: |
            git reset --hard "$CIRCLE_SHA1" \

      - run:
          name: Creating all modules and patches digest (All modules cache digest)
          command: |
            find ./patches/ ./modules/ -type f | sort -h |xargs sha256sum > /tmp/all_modules_and_patches.sha256sums \

      - run:
          name: Creating coreboot (and associated patches) and musl-cross-make modules digest (musl-cross-make and coreboot cache digest)
          command: |
            find ./modules/coreboot ./modules/musl-cross* ./patches/coreboot* -type f | sort -h | xargs sha256sum > /tmp/coreboot_musl-cross.sha256sums \

      - run:
          name: Creating musl-cross-make and musl-cross-make patches digest (musl-cross-make cache digest)
          command: |
            find modules/musl-cross* -type f | sort -h | xargs sha256sum > /tmp/musl-cross.sha256sums \


      - restore_cache:
          keys:
            #Restore existing cache for matching modules digest, validated to be exactly the same as in github current commit.
            #This cache was made on top of below caches, if previously existing. If no module definition changed, we reuse this one. Otherwise...
            - heads-modules-and-patches-{{ checksum "/tmp/all_modules_and_patches.sha256sums" }}{{ .Environment.CACHE_VERSION }}
            #If precedent cache not found, restore cache for coreboot module (and patches) and musl-cross-make digests (bi-yearly modified)
            #Otehrwise....
            - heads-coreboot-musl-cross-{{ checksum "/tmp/coreboot_musl-cross.sha256sums" }}{{ .Environment.CACHE_VERSION }}
            #If precedent cache not found. Restore cache for musl-cross-make module digest (rarely modified).
            #Otherwise, we build cleanly.
            - heads-musl-cross-{{ checksum "/tmp/musl-cross.sha256sums" }}{{ .Environment.CACHE_VERSION }}
# linuxboot steps need something to pass in the kernel header path
# skipping for now
#      - run:
#          name: qemu-linuxboot-edk2
#          command: |
#            ./build/make-4.2.1/make \
#                CROSS=/cross/bin/x86_64-linux-musl- \
#                BOARD=qemu-linuxboot \
#                `/bin/pwd`/build/linuxboot-git/build/qemu/.configured \
#                # Run first to avoid too many processes
#
#      - run:
#          name: qemu-linuxboot
#          command: |
#            ./build/make-4.2.1/make \
#                CROSS=/cross/bin/x86_64-linux-musl- \
#                CPUS=4 \
#                V=1 \
#                BOARD=qemu-linuxboot \
#
#      - store-artifacts:
#          path: build/qemu-linuxboot/linuxboot.rom
#      - store-artifacts:
#          path: build/qemu-linuxboot/hashes.txt
      - run:
          name: kgpe-d16_workstation-usb_keyboard
          command: |
            rm -rf build/kgpe-d16_workstation-usb_keyboard/* build/log/* && make CPUS=4 V=1 BOARD=kgpe-d16_workstation-usb_keyboard || touch /tmp/failed_build
          no_output_timeout: 3h
      - run:
          name: Output build failing logs
          command: |
            if [[ -f /tmp/failed_build ]]; then find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1;else echo "Not failing. Continuing..."; fi \
      - run:
          name: Ouput kgpe-d16_workstation-usb_keyboard hashes
          command: |
            cat build/kgpe-d16_workstation-usb_keyboard/hashes.txt \
      - run:
          name: Archiving build logs for kgpe-d16_workstation-usb_keyboard
          command: |
             tar zcvf build/kgpe-d16_workstation-usb_keyboard/logs.tar.gz build/log/*
      - store-artifacts:
          path: build/kgpe-d16_workstation-usb_keyboard

      - save_cache:
          #Generate cache for the same musl-cross module definition if hash is not previously existing
          key: heads-musl-cross-{{ checksum "/tmp/musl-cross.sha256sums" }}{{ .Environment.CACHE_VERSION }}
          paths:
            - crossgcc
            - build/musl-cross-*
      - save_cache:
          #Generate cache for the same coreboot mnd musl-cross-make modules definition if hash is not previously existing
          key: heads-coreboot-musl-cross-{{ checksum "/tmp/coreboot_musl-cross.sha256sums" }}{{ .Environment.CACHE_VERSION }}
          paths:
            - build/coreboot-*
            - crossgcc
            - build/musl-cross-*
      - save_cache:
          #Generate cache for the exact same modules definitions if hash is not previously existing
          key: heads-modules-and-patches-{{ checksum "/tmp/all_modules_and_patches.sha256sums" }}{{ .Environment.CACHE_VERSION }}
          paths:
            - packages
            - crossgcc
            - build
            - install

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
