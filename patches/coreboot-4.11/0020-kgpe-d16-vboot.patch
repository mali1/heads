diff --git a/src/mainboard/asus/kgpe-d16/Kconfig b/src/mainboard/asus/kgpe-d16/Kconfig
index ffbfd53169..5622ceded6 100644
--- a/src/mainboard/asus/kgpe-d16/Kconfig
+++ b/src/mainboard/asus/kgpe-d16/Kconfig
@@ -99,4 +99,57 @@ config MAX_REBOOT_CNT
 	int
 	default 10
 
+#
+# VBOOT compatibility options
+#
+config GBB_FLAG_DISABLE_LID_SHUTDOWN
+	bool
+	default y if VBOOT
+
+config GBB_FLAG_DISABLE_PD_SOFTWARE_SYNC
+	bool
+	default y if VBOOT
+
+config GBB_FLAG_DISABLE_EC_SOFTWARE_SYNC
+	bool
+	default y if VBOOT
+
+config GBB_FLAG_DISABLE_FWMP
+	bool
+	default y if VBOOT
+
+config VBOOT_STARTS_IN_ROMSTAGE
+	bool
+	default y if VBOOT
+
+config VBOOT_NO_BOARD_SUPPORT
+	bool
+	default y if VBOOT
+
+config VBOOT_VBNV_CMOS
+	bool
+	default y if VBOOT
+
+config VBOOT_VBNV_OFFSET
+	hex
+	default 0x2f if VBOOT
+
+config FMDFILE
+	string
+	default "src/mainboard/$(CONFIG_MAINBOARD_DIR)/vboot-ro.fmd" if VBOOT
+
+config TPM1
+	bool
+	default y if VBOOT
+
+# TPM_RDRESP_NEED_DELAY is required for this
+# board or the TPM will occasionaly fail.
+config TPM_RDRESP_NEED_DELAY
+	bool
+	default y if TPM1
+
+config RTC
+	bool
+	default y if VBOOT
+
 endif # BOARD_ASUS_KGPE_D16
diff --git a/src/mainboard/asus/kgpe-d16/cmos.layout b/src/mainboard/asus/kgpe-d16/cmos.layout
index 1c8d4662c3..1b93cd60f7 100644
--- a/src/mainboard/asus/kgpe-d16/cmos.layout
+++ b/src/mainboard/asus/kgpe-d16/cmos.layout
@@ -54,6 +54,8 @@ entries
 481          1       e       1        experimental_memory_speed_boost
 482          1       r       0        allow_spd_nvram_cache_restore
 483          4       h       0        maximum_p_state_limit
+# VBOOT
+488        128       r       0        vbnv
 728        256       h       0        user_data
 984         16       h       0        check_sum
 # Reserve the extended AMD configuration registers
diff --git a/src/mainboard/asus/kgpe-d16/vboot-ro.fmd b/src/mainboard/asus/kgpe-d16/vboot-ro.fmd
new file mode 100644
index 0000000000..2db21bf29e
--- /dev/null
+++ b/src/mainboard/asus/kgpe-d16/vboot-ro.fmd
@@ -0,0 +1,15 @@
+FLASH 16M {
+	SI_BIOS@0x0 0x1000000 {
+		UNIFIED_MRC_CACHE 0x20000 {
+			RECOVERY_MRC_CACHE 0x10000
+			RW_MRC_CACHE 0x10000
+		}
+		WP_RO 0xfe0000 {
+			FMAP 0x800
+			RO_FRID 0x40
+			RO_FRID_PAD 0x7c0
+			GBB 0x1e000
+			COREBOOT(CBFS)
+		}
+	}
+}
diff --git a/src/mainboard/asus/kgpe-d16/vboot-rwa.fmd b/src/mainboard/asus/kgpe-d16/vboot-rwa.fmd
new file mode 100644
index 0000000000..5607032629
--- /dev/null
+++ b/src/mainboard/asus/kgpe-d16/vboot-rwa.fmd
@@ -0,0 +1,27 @@
+FLASH 16M {
+	SI_BIOS@0x0 0x1000000 {
+		RW_SECTION_A 0x33e000 {
+			VBLOCK_A 0x20000
+			FW_MAIN_A(CBFS) 0x31dfc0
+			RW_FWID_A 0x40
+		}
+		MISC_RW 0x62000 {
+			UNIFIED_MRC_CACHE 0x20000 {
+				RECOVERY_MRC_CACHE 0x10000
+				RW_MRC_CACHE 0x10000
+			}
+			RW_VPD(PRESERVE) 0x2000
+			SMMSTORE(PRESERVE) 0x40000
+		}
+		WP_RO 0xc60000 {
+			RO_VPD(PRESERVE) 0x4000
+			RO_SECTION 0xc5c000 {
+				FMAP 0x800
+				RO_FRID 0x40
+				RO_FRID_PAD 0x7c0
+				GBB 0xef000
+				COREBOOT(CBFS) 0xb6c000
+			}
+		}
+	}
+}
diff --git a/src/southbridge/amd/sb700/Makefile.inc b/src/southbridge/amd/sb700/Makefile.inc
index 0a20a8c8b3..c1cd41678a 100644
--- a/src/southbridge/amd/sb700/Makefile.inc
+++ b/src/southbridge/amd/sb700/Makefile.inc
@@ -24,4 +24,8 @@ romstage-y += smbus.c
 romstage-y += ramtop.c
 ramstage-y += ramtop.c
 
+romstage-y += pmutil.c
+verstage-y += pmutil.c
+ramstage-y += pmutil.c
+
 endif
diff --git a/src/southbridge/amd/sb700/pmutil.c b/src/southbridge/amd/sb700/pmutil.c
new file mode 100644
index 0000000000..2c2db3df43
--- /dev/null
+++ b/src/southbridge/amd/sb700/pmutil.c
@@ -0,0 +1,25 @@
+/*
+ * This file is part of the coreboot project.
+ *
+ * Copyright 2017 Google Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <arch/acpi.h>
+#include <security/vboot/vboot_common.h>
+#include <security/vboot/vbnv.h>
+#include <pc80/mc146818rtc.h>
+
+int vbnv_cmos_failed(void)
+{
+	/* If CMOS power has failed, the century will be set to 0xff */
+	return cmos_read(RTC_CLK_ALTCENTURY) == 0xff;
+}
