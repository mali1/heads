image: fedora:30

variables:
  DOCKER_DRIVER: overlay2

cache: &global_cache
  key:
    files:
      #Cache is going to be recreated from scratch if modules or patches changed
      - ./modules/*
      - ./patches/*
    prefix: musl-cross-make
  paths:
    #Here we cache the minimal required to speed up builds on next runs under 15GB
    #packages so not redownloaded for same modules hashes
    - ./packages
    #crossgcc being the output of musl-cross build (install)
    - ./crossgcc
    - ./build/musl-cross-*
    #coreboot cache of build boards
    - ./build/coreboot*
    #linux of build boards dependencies
    - ./build/linux*
    
stages:
  - musl-cross-make
  - boards_coreboot_481
  - boards_coreboot_412


heads_reproducible_buildstack:
  cache:
    # inherit all global cache settings
    <<: *global_cache
  stage: musl-cross-make
  #default is push/pull. If we keep it small enough (under 15GB)
  script:
    - echo "Installing prerequisites..."
    - dnf install -y @development-tools gcc-c++ gcc-gnat zlib-devel perl-Digest-MD5 perl-Digest-SHA uuid-devel pcsc-tools ncurses-devel lbzip2 libuuid-devel lzma elfutils-libelf-devel bc bzip2 bison flex git gnupg iasl m4 nasm patch python wget libusb-devel cmake automake pv bsdiff autoconf libtool cpio texinfo
    - git fetch origin
    - git reset --hard origin/$CI_COMMIT_REF_NAME
    #Building cache for coreboot 4.81 based board so that the cache has musl-cross-make + one specific linux version + coreboot 4.81 cache 
    - echo "Buidling x230-hotp-verification..."
    - make BOARD=x230-hotp-verification || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1)
    - echo "Building BOARD=librem_mini board..."
    - make BOARD=librem_mini || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1)
    - echo "Calculate used space for cache"
    - du -shc packages crossgcc ./build/linux* ./build/musl-cross-* install
  

heads_coreboot_481:
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy with pull only (no push) 
    # since we can't recreate an updated cache (not enough disk space available on GitlabCI)
    policy: pull
  stage: boards_coreboot_481
  script:
    - echo "Installing prerequisites..."
    - dnf install -y @development-tools gcc-c++ gcc-gnat zlib-devel perl-Digest-MD5 perl-Digest-SHA uuid-devel pcsc-tools ncurses-devel lbzip2 libuuid-devel lzma elfutils-libelf-devel bc bzip2 bison flex git gnupg iasl m4 nasm patch python wget libusb-devel cmake automake pv bsdiff autoconf libtool cpio texinfo
    - git fetch origin
    - git reset --hard origin/$CI_COMMIT_REF_NAME

    #Rebuilding all boards, even the ones from cache
    - echo "Removing old x230-hotp-verification artifacts..."
    - rm -rf ./build/x230-hotp-verification/*
    - rm -rf ./build/log/*
    - echo "Building BOARD=x230-hotp-verification board..."
    - make BOARD=x230-hotp-verification || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1)
    - echo "x230-hotp-verification hashes:"
    - cat ./build/x230-hotp-verification/hashes.txt
    - echo "Archiving x230-hotp-verification logs..."
    - tar zcvf ./build/x230-hotp-verification/logs.tar.gz ./build/log/*

    - echo "Removing old x230 artifacts..."
    - rm -rf ./build/x230/*
    - rm -rf ./build/log/*
    - echo "Building BOARD=x230 board..."
    - make BOARD=x230 || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1)
    - echo "x230 hashes:"
    - cat ./build/x230/hashes.txt
    - echo "Archiving x230 logs..."
    - tar zcvf ./build/x230/logs.tar.gz ./build/log/*

    - echo "Removing old t430 artifacts..."
    - rm -rf ./build/t430/*
    - rm -rf ./build/log/*
    - echo "Building BOARD=t430 board..."
    - make BOARD=t430 || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1)
    - echo "t430 hashes:"
    - cat ./build/t430/hashes.txt
    - echo "Archiving t430 logs..."
    - tar zcvf ./build/t430/logs.tar.gz ./build/log/*

    - echo "Removing old x230-flash artifacts..."
    - rm -rf ./build/x230-flash/*
    - rm -rf ./build/log/*
    - echo "Building BOARD=x230-flash board..."
    - make BOARD=x230-flash || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1)
    - echo "x230-flash hashes:"
    - cat ./build/x230-flash/hashes.txt
    - echo "Archiving x230-flash logs..."
    - tar zcvf ./build/x230-flash/logs.tar.gz ./build/log/*

    - echo "Removing old t430-flash artifacts..."
    - rm -rf ./build/t430-flash/*
    - rm -rf ./build/log/*
    - echo "Building BOARD=t430-flash board..."
    - make BOARD=t430-flash || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1)
    - echo "t430-flash hashes:"
    - cat ./build/t430-flash/hashes.txt
    - echo "Archiving t430-flash logs..."
    - tar zcvf ./build/t430-flash/logs.tar.gz ./build/log/*

    - echo "Removing old qemu-coreboot artifacts..."
    - rm -rf ./build/qemu-coreboot/*
    - rm -rf ./build/log/*
    - echo "Building BOARD=qemu-coreboot board..."
    - make BOARD=qemu-coreboot || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1)
    - echo "qemu-coreboot hashes:"
    - cat ./build/qemu-coreboot/hashes.txt
    - echo "Archiving qemu-coreboot logs..."
    - tar zcvf ./build/qemu-coreboot/logs.tar.gz ./build/log/*

    - echo "Calculate used space..."
    - du -shc packages crossgcc build install

  artifacts:
    paths:
      #Saving artifacts
      - ./build/x230-hotp-verification
      - ./build/x230
      - ./build/t430
      - ./build/t430-flash
      - ./build/x230-flash
      - ./build/qemu-coreboot

heads_coreboot_412:
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy with pull only (no push) 
    # since we can't recreate an updated cache (not enough disk space available on GitlabCI)
    policy: pull
  stage: boards_coreboot_412
  script:
    - echo "Installing prerequisites..."
    - dnf install -y @development-tools gcc-c++ gcc-gnat zlib-devel perl-Digest-MD5 perl-Digest-SHA uuid-devel pcsc-tools ncurses-devel lbzip2 libuuid-devel lzma elfutils-libelf-devel bc bzip2 bison flex git gnupg iasl m4 nasm patch python wget libusb-devel cmake automake pv bsdiff autoconf libtool cpio texinfo
    - git fetch origin
    - git reset --hard origin/$CI_COMMIT_REF_NAME

    #Buidling one coreboot 4.12 based board so that the cahce has musl-cross-make + one specific linux version + coreboot 4.12 cache
    - echo "Removing old librem_mini artifacts..."
    - rm -rf ./build/librem_mini/*
    - rm -rf ./build/log/*
    - echo "Building BOARD=librem_mini board..."
    - make BOARD=librem_mini || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1)
    - echo "librem_mini hashes:"
    - cat ./build/librem_mini/hashes.txt
    - echo "Archiving librem_mini logs..."
    - tar zcvf ./build/librem_mini/logs.tar.gz ./build/log/*

    - echo "Calculate used space..."
    - du -shc packages crossgcc build install

  artifacts:
    paths:
      #Saving artifacts
      - ./build/librem_mini
