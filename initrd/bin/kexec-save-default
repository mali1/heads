#!/bin/sh
# Save these options to be the persistent default
set -e -o pipefail
. /tmp/config
. /etc/functions

while getopts "b:d:p:i:" arg; do
  case $arg in
    b) bootdir="$OPTARG" ;;
    d) paramsdev="$OPTARG" ;;
    p) paramsdir="$OPTARG" ;;
    i) index="$OPTARG" ;;
  esac
done

if [ -z "$bootdir" -o -z "$index" ]; then
  die "Usage: $0 -b /boot -i menu_option "
fi

if [ -z "$paramsdev" ]; then
  paramsdev="$bootdir"
fi

if [ -z "$paramsdir" ]; then
  paramsdir="$bootdir"
fi

bootdir="${bootdir%%/}"
paramsdev="${paramsdev%%/}"
paramsdir="${paramsdir%%/}"

TMP_MENU_FILE="/tmp/kexec/kexec_menu.txt"
ENTRY_FILE="$paramsdir/kexec_default.$index.txt"
HASH_FILE="$paramsdir/kexec_default_hashes.txt"

if [ ! -r "$TMP_MENU_FILE" ]; then
  die "No menu options available, please run kexec-select-boot"
fi

entry=`head -n $index $TMP_MENU_FILE | tail -1`
if [ -z "$entry" ]; then
  die "Invalid menu index $index"
fi

KEY_DEVICES="$paramsdir/kexec_key_devices.txt"
KEY_LVM="$paramsdir/kexec_key_lvm.txt"
save_key="n"

if [ "$CONFIG_TPM" = "y" ]; then
  if [ ! -r "$KEY_DEVICES" ]; then
    read \
      -n 1 \
      -p "Do you wish to add a disk encryption to the TPM [y/N]: " \
      add_key_confirm

    if [ "$add_key_confirm" = "y" \
      -o "$add_key_confirm" = "Y" ]; then
      lvm_suggest="e.g. qubes_dom0 or blank"
      devices_suggest="e.g. /dev/sda2 or blank"
      save_key="y"
    fi
  else
    read \
      -n 1 \
      -p "Do you want to reseal a disk key to the TPM [Y/n]: " \
      change_key_confirm
    echo

    if [ "$change_key_confirm" = "y" ] || [ "$change_key_confirm" = "Y" ] || [ -z "$change_key_confirm" ]; then
      old_lvm_volume_group=""
      if [ -r "$KEY_LVM" ]; then
        old_lvm_volume_group=`cat $KEY_LVM` || true
        old_key_devices=`cat $KEY_DEVICES \
        | cut -d\  -f1 \
        | grep -v "$old_lvm_volume_group" \
        | xargs` || true
      else
        old_key_devices=`cat $KEY_DEVICES \
        | cut -d\  -f1 | xargs` || true
      fi

      lvm_suggest="was '$old_lvm_volume_group'"
      devices_suggest="was '$old_key_devices'"
      save_key="y"
    else
      echo -e "\n\nTo set a new unlock disk password, different then the disk recovery password, resealing the disk key to the TPM is needed.\n\nThe actual default boot option may have been invalidated by a firmware upgrade or a firmware tampering.\nIf you are the origin of the change, you have already resealed TOTP/HOTP, which already modified the TPM.\n\nIt is strongly advised to set a new default option, which will add the disk unlock key to the TPM.\n\nThe disk unlock key password you will choose at this step will be required of you at each machine startup and will protect the disk recovery key password from interested eyes.\n\nBy selecting a disk unlock password, a camera that would see you type your disk unlock key password will only be able to access the content of your hard drive on this computer.\n\nMore critically, someone knowing your disk recovery key password would just have to clone your disk (which takes 30 minutes) and be able to access its content from any other computer later on.\nConsider yourself warned.\n"
      die "User refused to reseal the disk unlock key to the TPM"
    fi
  fi

  if [ "$save_key" = "y" ]; then
    if [ -n "$old_key_devices" ] || [ -n "$old_lvm_volume_group" ]; then
      read \
        -n 1 \
        -p "Do you want to reuse past Encrypted LVM groups/Block devices? (Y/n):" \
        reuse_past_devices
       echo
      if [ "$reuse_past_devices" = "y" ] || [ "$reuse_past_devices" = "Y" ] || [ -z "$reuse_past_devices" ]; then
        if [ -z "$key_devices" ] && [ -n "$old_key_devices" ]; then
          key_devices=$old_key_devices
        if [ -z "$lvm_volume_group" ] && [ -n "$old_lvm_volume_group" ]; then
          lvm_volume_group=$old_lvm_volume_group
        fi
      fi
    fi
    else
      echo "+++ LVM volume groups (lvm vgscan): "
      lvm vgscan || true

      read \
        -p "Encrypted LVM group? ($lvm_suggest): " \
        lvm_volume_group

      echo "+++ Block devices (blkid): "
      blkid || true

      read \
        -p "Encrypted devices? ($devices_suggest): " \
        key_devices
    fi

    save_key_params="-s -p $paramsdev"
    if [ -n "$lvm_volume_group" ]; then
      save_key_params="$save_key_params -l $lvm_volume_group $key_devices"
    elif [ -n $key_devices ]; then
      save_key_params="$save_key_params $key_devices"
    else
      die "No LVM Group nor Encrypted devices provided."
    fi
  fi  
  echo -e "\nRunning kexec-save-key with params: $save_key_params\n"
  kexec-save-key $save_key_params \
  || die "Failed to save the disk key"
fi

# try to switch to rw mode
mount -o rw,remount $paramsdev

if [ ! -d $paramsdir ]; then
  mkdir -p $paramsdir \
  || die "Failed to create params directory"
fi
rm "$paramsdir/kexec_default.*.txt" 2>/dev/null || true
echo "$entry" > $ENTRY_FILE
cd $bootdir && kexec-boot -b "$bootdir" -e "$entry" -f | \
  xargs sha256sum > $HASH_FILE \
|| die "Failed to create hashes of boot files"
if [ ! -r $ENTRY_FILE -o ! -r $HASH_FILE ]; then
  die "Failed to write default config"
fi

# sign and auto-roll config counter
extparam=
if [ "$CONFIG_TPM" = "y" ]; then
  extparam=-u
fi
kexec-sign-config -p $paramsdir $extparam \
|| die "Failed to sign default config"

# switch back to ro mode
mount -o ro,remount $paramsdev
